image: registry.gitlab.com/gitlab-org/gitlab-build-images:golang-1.7-git-2.8.4

stages:
  - test
  - package
  - publish

verify:
  stage: test
  script:
    - make verify

.test_template: &test_definition
  stage: test
  script:
    - go version
    - git version
    - make test

test:go1.8:
  <<: *test_definition
  image: registry.gitlab.com/gitlab-org/gitlab-build-images:golang-1.8-git-2.8.4

cover:
  stage: test
  script:
    - make cover
  artifacts:
    paths:
      - _build/cover/all.html

package:
  stage: package
  only:
    - tags
  script:
    - apt-get update -qq
    - apt-get install -qq -y rubygems bundler
    - GOOS=linux GOARCH=amd64 make clean package
    - ls -l # Want to see permissions as they went into the .deb
    - dpkg -e *.deb
    - cat DEBIAN/control
    - cat DEBIAN/md5sums
    - rm -rf DEBIAN
  artifacts:
    paths:
      - ./*.deb

publish:
  stage: publish
  only:
    - tags
  variables:
    GIT_STRATEGY: none
  script:
    - apt-get update -qq
    - apt-get install -y rubygems
    - gem install package_cloud
    - ls -lh *.deb
    - shasum -a256 *.deb
    - package_cloud push $PACKAGECLOUD_REPO *.deb --url=https://packages.gitlab.com
  allow_failure: true

# Create a code quality report
codeclimate:
  image: docker:latest
  stage: test
  variables:
    DOCKER_DRIVER: overlay
  services:
    - docker:dind
  script:
    - docker run --env CODECLIMATE_CODE="$PWD" --volume "$PWD":/code --volume /var/run/docker.sock:/var/run/docker.sock --volume /tmp/cc:/tmp/cc codeclimate/codeclimate analyze -f json > codeclimate.json
  artifacts:
    paths: [codeclimate.json]
  allow_failure: true

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: lint.proto

package gitalypb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OperationMsg_Operation int32

const (
	OperationMsg_UNKNOWN  OperationMsg_Operation = 0
	OperationMsg_MUTATOR  OperationMsg_Operation = 1
	OperationMsg_ACCESSOR OperationMsg_Operation = 2
)

var OperationMsg_Operation_name = map[int32]string{
	0: "UNKNOWN",
	1: "MUTATOR",
	2: "ACCESSOR",
}

var OperationMsg_Operation_value = map[string]int32{
	"UNKNOWN":  0,
	"MUTATOR":  1,
	"ACCESSOR": 2,
}

func (x OperationMsg_Operation) String() string {
	return proto.EnumName(OperationMsg_Operation_name, int32(x))
}

func (OperationMsg_Operation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1612d42a10b555ca, []int{0, 0}
}

type OperationMsg_Scope int32

const (
	OperationMsg_REPOSITORY OperationMsg_Scope = 0
	OperationMsg_SERVER     OperationMsg_Scope = 1
	OperationMsg_STORAGE    OperationMsg_Scope = 2
)

var OperationMsg_Scope_name = map[int32]string{
	0: "REPOSITORY",
	1: "SERVER",
	2: "STORAGE",
}

var OperationMsg_Scope_value = map[string]int32{
	"REPOSITORY": 0,
	"SERVER":     1,
	"STORAGE":    2,
}

func (x OperationMsg_Scope) String() string {
	return proto.EnumName(OperationMsg_Scope_name, int32(x))
}

func (OperationMsg_Scope) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1612d42a10b555ca, []int{0, 1}
}

type OperationMsg struct {
	Op OperationMsg_Operation `protobuf:"varint,1,opt,name=op,proto3,enum=gitaly.OperationMsg_Operation" json:"op,omitempty"`
	// Scope level indicates what level an RPC interacts with a server:
	//   - REPOSITORY: scoped to only a single repo
	//   - SERVER: affects the entire server and potentially all repos
	//   - STORAGE: scoped to a specific storage location and all repos within
	ScopeLevel           OperationMsg_Scope `protobuf:"varint,2,opt,name=scope_level,json=scopeLevel,proto3,enum=gitaly.OperationMsg_Scope" json:"scope_level,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *OperationMsg) Reset()         { *m = OperationMsg{} }
func (m *OperationMsg) String() string { return proto.CompactTextString(m) }
func (*OperationMsg) ProtoMessage()    {}
func (*OperationMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_1612d42a10b555ca, []int{0}
}

func (m *OperationMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperationMsg.Unmarshal(m, b)
}
func (m *OperationMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperationMsg.Marshal(b, m, deterministic)
}
func (m *OperationMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperationMsg.Merge(m, src)
}
func (m *OperationMsg) XXX_Size() int {
	return xxx_messageInfo_OperationMsg.Size(m)
}
func (m *OperationMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_OperationMsg.DiscardUnknown(m)
}

var xxx_messageInfo_OperationMsg proto.InternalMessageInfo

func (m *OperationMsg) GetOp() OperationMsg_Operation {
	if m != nil {
		return m.Op
	}
	return OperationMsg_UNKNOWN
}

func (m *OperationMsg) GetScopeLevel() OperationMsg_Scope {
	if m != nil {
		return m.ScopeLevel
	}
	return OperationMsg_REPOSITORY
}

var E_OpType = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MethodOptions)(nil),
	ExtensionType: (*OperationMsg)(nil),
	Field:         82303,
	Name:          "gitaly.op_type",
	Tag:           "bytes,82303,opt,name=op_type",
	Filename:      "lint.proto",
}

var E_Storage = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         91233,
	Name:          "gitaly.storage",
	Tag:           "varint,91233,opt,name=storage",
	Filename:      "lint.proto",
}

var E_Repository = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         91234,
	Name:          "gitaly.repository",
	Tag:           "varint,91234,opt,name=repository",
	Filename:      "lint.proto",
}

var E_TargetRepository = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         91235,
	Name:          "gitaly.target_repository",
	Tag:           "varint,91235,opt,name=target_repository",
	Filename:      "lint.proto",
}

var E_AdditionalRepository = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*bool)(nil),
	Field:         91236,
	Name:          "gitaly.additional_repository",
	Tag:           "varint,91236,opt,name=additional_repository",
	Filename:      "lint.proto",
}

func init() {
	proto.RegisterEnum("gitaly.OperationMsg_Operation", OperationMsg_Operation_name, OperationMsg_Operation_value)
	proto.RegisterEnum("gitaly.OperationMsg_Scope", OperationMsg_Scope_name, OperationMsg_Scope_value)
	proto.RegisterType((*OperationMsg)(nil), "gitaly.OperationMsg")
	proto.RegisterExtension(E_OpType)
	proto.RegisterExtension(E_Storage)
	proto.RegisterExtension(E_Repository)
	proto.RegisterExtension(E_TargetRepository)
	proto.RegisterExtension(E_AdditionalRepository)
}

func init() { proto.RegisterFile("lint.proto", fileDescriptor_1612d42a10b555ca) }

var fileDescriptor_1612d42a10b555ca = []byte{
	// 397 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0x41, 0x6b, 0xd4, 0x40,
	0x14, 0x80, 0x9b, 0x40, 0x37, 0xf5, 0xa5, 0x94, 0x38, 0x54, 0x58, 0x0a, 0x96, 0x65, 0x4f, 0xbd,
	0x38, 0x29, 0xed, 0xc9, 0x78, 0x90, 0xb5, 0x44, 0x11, 0xbb, 0x3b, 0x32, 0x49, 0x15, 0xbd, 0x2c,
	0xc9, 0x66, 0x1c, 0x03, 0x63, 0xdf, 0x30, 0x19, 0x85, 0x5c, 0xfd, 0x75, 0xfe, 0x0d, 0xab, 0xff,
	0x43, 0x99, 0x24, 0x6d, 0x0a, 0x16, 0xd4, 0x5b, 0xde, 0xe3, 0xfb, 0x3e, 0x92, 0x47, 0x00, 0x54,
	0x7d, 0x69, 0xa9, 0x36, 0x68, 0x91, 0x4c, 0x64, 0x6d, 0x0b, 0xd5, 0x1e, 0xcc, 0x24, 0xa2, 0x54,
	0x22, 0xee, 0xb6, 0xe5, 0xe7, 0x0f, 0x71, 0x25, 0x9a, 0x8d, 0xa9, 0xb5, 0x45, 0xd3, 0x93, 0xf3,
	0x2b, 0x0f, 0x76, 0x99, 0x16, 0xa6, 0xb0, 0x35, 0x5e, 0x2e, 0x1b, 0x49, 0x28, 0xf8, 0xa8, 0xa7,
	0xde, 0xcc, 0x3b, 0xda, 0x3b, 0x39, 0xa4, 0x7d, 0x87, 0xde, 0x26, 0xc6, 0x81, 0xfb, 0xa8, 0xc9,
	0x13, 0x08, 0x9b, 0x0d, 0x6a, 0xb1, 0x56, 0xe2, 0x8b, 0x50, 0x53, 0xbf, 0x13, 0x0f, 0xee, 0x14,
	0x33, 0xc7, 0x71, 0xe8, 0xf0, 0x73, 0x47, 0xcf, 0x4f, 0xe1, 0xde, 0x0d, 0x41, 0x42, 0x08, 0x2e,
	0x56, 0xaf, 0x56, 0xec, 0xed, 0x2a, 0xda, 0x72, 0xc3, 0xf2, 0x22, 0x5f, 0xe4, 0x8c, 0x47, 0x1e,
	0xd9, 0x85, 0x9d, 0xc5, 0xd9, 0x59, 0x9a, 0x65, 0x8c, 0x47, 0xfe, 0xfc, 0x18, 0xb6, 0xbb, 0x12,
	0xd9, 0x03, 0xe0, 0xe9, 0x6b, 0x96, 0xbd, 0xcc, 0x19, 0x7f, 0x17, 0x6d, 0x11, 0x80, 0x49, 0x96,
	0xf2, 0x37, 0xa9, 0x53, 0x42, 0x08, 0xb2, 0x9c, 0xf1, 0xc5, 0x8b, 0x34, 0xf2, 0x13, 0x06, 0x01,
	0xea, 0xb5, 0x6d, 0xb5, 0x20, 0x87, 0xb4, 0x3f, 0x09, 0xbd, 0x3e, 0x09, 0x5d, 0x0a, 0xfb, 0x11,
	0x2b, 0xa6, 0xdd, 0x3b, 0x34, 0xd3, 0x5f, 0x5f, 0xb7, 0x67, 0xde, 0x51, 0x78, 0xb2, 0x7f, 0xd7,
	0x17, 0xf0, 0x09, 0xea, 0xbc, 0xd5, 0x22, 0x79, 0x0c, 0x41, 0x63, 0xd1, 0x14, 0x52, 0x90, 0x87,
	0x7f, 0x04, 0x9f, 0xd7, 0x42, 0xdd, 0xf4, 0xbe, 0x7f, 0x73, 0xbd, 0x1d, 0x7e, 0xcd, 0x27, 0x4f,
	0x01, 0x8c, 0xd0, 0xd8, 0xd4, 0x16, 0x4d, 0xfb, 0x37, 0xfb, 0x6a, 0xb0, 0x6f, 0x29, 0xc9, 0x39,
	0xdc, 0xb7, 0x85, 0x91, 0xc2, 0xae, 0xff, 0xbd, 0xf3, 0x63, 0xe8, 0x44, 0xbd, 0xc9, 0xc7, 0x5a,
	0x0e, 0x0f, 0x8a, 0xaa, 0xaa, 0x1d, 0x56, 0xa8, 0xff, 0x28, 0xfe, 0x1c, 0x8a, 0xfb, 0xa3, 0x3d,
	0x56, 0x9f, 0x1d, 0xbf, 0x77, 0xe7, 0x53, 0x45, 0x49, 0x37, 0xf8, 0x29, 0xee, 0x1f, 0x1f, 0xa1,
	0x91, 0x71, 0x7f, 0xd4, 0xfe, 0x7f, 0x8c, 0x25, 0x0e, 0xb3, 0x2e, 0xcb, 0x49, 0xb7, 0x3a, 0xfd,
	0x1d, 0x00, 0x00, 0xff, 0xff, 0x3e, 0xd0, 0x1e, 0x01, 0xc6, 0x02, 0x00, 0x00,
}

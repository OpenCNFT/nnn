// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ha-cleanup.proto

package gitalypb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CleanupOrphanedReposRequest struct {
	ValidRepositories    []*Repository `protobuf:"bytes,1,rep,name=valid_repositories,json=validRepositories,proto3" json:"valid_repositories,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CleanupOrphanedReposRequest) Reset()         { *m = CleanupOrphanedReposRequest{} }
func (m *CleanupOrphanedReposRequest) String() string { return proto.CompactTextString(m) }
func (*CleanupOrphanedReposRequest) ProtoMessage()    {}
func (*CleanupOrphanedReposRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bebeab995a676ed6, []int{0}
}

func (m *CleanupOrphanedReposRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CleanupOrphanedReposRequest.Unmarshal(m, b)
}
func (m *CleanupOrphanedReposRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CleanupOrphanedReposRequest.Marshal(b, m, deterministic)
}
func (m *CleanupOrphanedReposRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CleanupOrphanedReposRequest.Merge(m, src)
}
func (m *CleanupOrphanedReposRequest) XXX_Size() int {
	return xxx_messageInfo_CleanupOrphanedReposRequest.Size(m)
}
func (m *CleanupOrphanedReposRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CleanupOrphanedReposRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CleanupOrphanedReposRequest proto.InternalMessageInfo

func (m *CleanupOrphanedReposRequest) GetValidRepositories() []*Repository {
	if m != nil {
		return m.ValidRepositories
	}
	return nil
}

type CleanupOrphanedReposResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CleanupOrphanedReposResponse) Reset()         { *m = CleanupOrphanedReposResponse{} }
func (m *CleanupOrphanedReposResponse) String() string { return proto.CompactTextString(m) }
func (*CleanupOrphanedReposResponse) ProtoMessage()    {}
func (*CleanupOrphanedReposResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_bebeab995a676ed6, []int{1}
}

func (m *CleanupOrphanedReposResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CleanupOrphanedReposResponse.Unmarshal(m, b)
}
func (m *CleanupOrphanedReposResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CleanupOrphanedReposResponse.Marshal(b, m, deterministic)
}
func (m *CleanupOrphanedReposResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CleanupOrphanedReposResponse.Merge(m, src)
}
func (m *CleanupOrphanedReposResponse) XXX_Size() int {
	return xxx_messageInfo_CleanupOrphanedReposResponse.Size(m)
}
func (m *CleanupOrphanedReposResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CleanupOrphanedReposResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CleanupOrphanedReposResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*CleanupOrphanedReposRequest)(nil), "gitaly.CleanupOrphanedReposRequest")
	proto.RegisterType((*CleanupOrphanedReposResponse)(nil), "gitaly.CleanupOrphanedReposResponse")
}

func init() { proto.RegisterFile("ha-cleanup.proto", fileDescriptor_bebeab995a676ed6) }

var fileDescriptor_bebeab995a676ed6 = []byte{
	// 223 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xc8, 0x48, 0xd4, 0x4d,
	0xce, 0x49, 0x4d, 0xcc, 0x2b, 0x2d, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4b, 0xcf,
	0x2c, 0x49, 0xcc, 0xa9, 0x94, 0xe2, 0x29, 0xce, 0x48, 0x2c, 0x4a, 0x4d, 0x81, 0x88, 0x2a, 0x25,
	0x70, 0x49, 0x3b, 0x43, 0x94, 0xf9, 0x17, 0x15, 0x64, 0x24, 0xe6, 0xa5, 0xa6, 0x04, 0xa5, 0x16,
	0xe4, 0x17, 0x07, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x39, 0x72, 0x09, 0x95, 0x25, 0xe6,
	0x64, 0xa6, 0xc4, 0x17, 0x81, 0x44, 0x33, 0x4b, 0xf2, 0x8b, 0x32, 0x53, 0x8b, 0x25, 0x18, 0x15,
	0x98, 0x35, 0xb8, 0x8d, 0x84, 0xf4, 0x20, 0x26, 0xea, 0x05, 0xc1, 0xe4, 0x2a, 0x83, 0x04, 0xc1,
	0xaa, 0x83, 0x90, 0x14, 0x2b, 0xc9, 0x71, 0xc9, 0x60, 0xb7, 0xa1, 0xb8, 0x20, 0x3f, 0xaf, 0x38,
	0xd5, 0xa8, 0x8e, 0x8b, 0xdf, 0xc3, 0x11, 0xaa, 0x22, 0x38, 0xb5, 0xa8, 0x2c, 0x33, 0x55, 0x28,
	0x9b, 0x4b, 0x04, 0x9b, 0x16, 0x21, 0x65, 0x98, 0x8d, 0x78, 0x9c, 0x2c, 0xa5, 0x82, 0x5f, 0x11,
	0xc4, 0x56, 0x25, 0x8e, 0x5f, 0xd3, 0x35, 0x58, 0x38, 0x18, 0x05, 0x18, 0x9d, 0x0c, 0xa2, 0x40,
	0x1a, 0x72, 0x12, 0x93, 0xf4, 0x92, 0xf3, 0x73, 0xf5, 0x21, 0x4c, 0xdd, 0xfc, 0xa2, 0x74, 0x7d,
	0x88, 0x31, 0xfa, 0xe0, 0x70, 0xd2, 0x4f, 0xcf, 0x87, 0xf2, 0x0b, 0x92, 0x92, 0xd8, 0xc0, 0x42,
	0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x1d, 0x57, 0x4d, 0x52, 0x64, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HACleanupServieClient is the client API for HACleanupServie service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HACleanupServieClient interface {
	CleanupOrphanedRepos(ctx context.Context, in *CleanupOrphanedReposRequest, opts ...grpc.CallOption) (*CleanupOrphanedReposResponse, error)
}

type hACleanupServieClient struct {
	cc *grpc.ClientConn
}

func NewHACleanupServieClient(cc *grpc.ClientConn) HACleanupServieClient {
	return &hACleanupServieClient{cc}
}

func (c *hACleanupServieClient) CleanupOrphanedRepos(ctx context.Context, in *CleanupOrphanedReposRequest, opts ...grpc.CallOption) (*CleanupOrphanedReposResponse, error) {
	out := new(CleanupOrphanedReposResponse)
	err := c.cc.Invoke(ctx, "/gitaly.HACleanupServie/CleanupOrphanedRepos", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HACleanupServieServer is the server API for HACleanupServie service.
type HACleanupServieServer interface {
	CleanupOrphanedRepos(context.Context, *CleanupOrphanedReposRequest) (*CleanupOrphanedReposResponse, error)
}

// UnimplementedHACleanupServieServer can be embedded to have forward compatible implementations.
type UnimplementedHACleanupServieServer struct {
}

func (*UnimplementedHACleanupServieServer) CleanupOrphanedRepos(ctx context.Context, req *CleanupOrphanedReposRequest) (*CleanupOrphanedReposResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CleanupOrphanedRepos not implemented")
}

func RegisterHACleanupServieServer(s *grpc.Server, srv HACleanupServieServer) {
	s.RegisterService(&_HACleanupServie_serviceDesc, srv)
}

func _HACleanupServie_CleanupOrphanedRepos_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CleanupOrphanedReposRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HACleanupServieServer).CleanupOrphanedRepos(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitaly.HACleanupServie/CleanupOrphanedRepos",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HACleanupServieServer).CleanupOrphanedRepos(ctx, req.(*CleanupOrphanedReposRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _HACleanupServie_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gitaly.HACleanupServie",
	HandlerType: (*HACleanupServieServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CleanupOrphanedRepos",
			Handler:    _HACleanupServie_CleanupOrphanedRepos_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ha-cleanup.proto",
}

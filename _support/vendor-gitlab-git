#!/usr/bin/env ruby

LOCAL_FETCH_DIR = 'ruby/vendor/gitlab_git'
FILE_LIST = %w[lib/gitlab/git.rb lib/gitlab/git lib/gitlab/encoding_helper.rb]
REMOTE = 'https://gitlab.com/gitlab-org/gitlab-ce'
REVISION_FILE = 'ruby/vendor/gitlab_git/REVISION'
ORIGIN_FILE = 'ruby/vendor/gitlab_git/ORIGIN'

require_relative 'run.rb'
require 'tempfile'

def main
  if ARGV.count != 1
    abort "usage: #{$0} BRANCH_OR_TAG"
  end

  revision = ARGV.first
  revision_sha = nil

  Dir.mktmpdir do |dir|
    gitlab_dir = File.join(dir, 'gitlab')
    run!(%W[git clone --depth=1 -b #{revision} #{REMOTE}.git #{gitlab_dir}])
    revision_sha = capture!(%W[git rev-parse HEAD], gitlab_dir).chomp

    FileUtils.rm_rf(LOCAL_FETCH_DIR)
    FileUtils.mkdir_p(LOCAL_FETCH_DIR)
    run!(%W[rsync -avR] + FILE_LIST + %W[#{File.join(Dir.pwd, LOCAL_FETCH_DIR)}/], gitlab_dir)
  end

  File.write(REVISION_FILE, "#{revision_sha}\n")
  File.write(ORIGIN_FILE, "Cloned from #{REMOTE}.\n")
end

main
